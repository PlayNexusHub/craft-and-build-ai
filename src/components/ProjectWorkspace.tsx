import { useState } from "react";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { 
  Eye, 
  Code, 
  Smartphone, 
  Monitor, 
  Download, 
  Play,
  Folder,
  FileCode,
  Image,
  Settings
} from "lucide-react";

export const ProjectWorkspace = () => {
  const [activeTab, setActiveTab] = useState("preview");

  // Mock project data
  const project = {
    name: "My AI-Generated App",
    description: "A beautiful React application created with AI assistance",
    status: "ready",
    lastGenerated: new Date(),
  };

  const projectFiles = [
    { name: "src/App.tsx", type: "react", size: "2.1 KB" },
    { name: "src/components/Header.tsx", type: "react", size: "1.8 KB" },
    { name: "src/styles/globals.css", type: "css", size: "0.9 KB" },
    { name: "public/logo.svg", type: "image", size: "3.2 KB" },
    { name: "package.json", type: "json", size: "1.1 KB" },
  ];

  return (
    <div className="flex flex-col h-full bg-background">
      {/* Header */}
      <div className="p-4 border-b border-border bg-card">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-2xl font-bold text-card-foreground">{project.name}</h1>
            <p className="text-muted-foreground">{project.description}</p>
          </div>
          <div className="flex items-center gap-2">
            <Badge variant="outline" className="bg-gradient-accent text-accent-foreground border-accent">
              {project.status}
            </Badge>
            <Button variant="outline" size="sm">
              <Settings className="w-4 h-4 mr-2" />
              Settings
            </Button>
          </div>
        </div>
        
        {/* Quick Actions */}
        <div className="flex gap-2 mt-4">
          <Button size="sm" className="bg-gradient-primary hover:shadow-glow transition-smooth">
            <Play className="w-4 h-4 mr-2" />
            Run Preview
          </Button>
          <Button variant="outline" size="sm">
            <Download className="w-4 h-4 mr-2" />
            Export
          </Button>
          <Button variant="outline" size="sm">
            <Smartphone className="w-4 h-4 mr-2" />
            Mobile View
          </Button>
        </div>
      </div>

      {/* Workspace Content */}
      <div className="flex-1 p-4">
        <Tabs value={activeTab} onValueChange={setActiveTab} className="h-full">
          <TabsList className="grid grid-cols-3 w-full max-w-md">
            <TabsTrigger value="preview" className="flex items-center gap-2">
              <Eye className="w-4 h-4" />
              Preview
            </TabsTrigger>
            <TabsTrigger value="code" className="flex items-center gap-2">
              <Code className="w-4 h-4" />
              Code
            </TabsTrigger>
            <TabsTrigger value="files" className="flex items-center gap-2">
              <Folder className="w-4 h-4" />
              Files
            </TabsTrigger>
          </TabsList>

          <TabsContent value="preview" className="mt-4 h-full">
            <Card className="h-full border-2 border-dashed border-muted bg-muted/20">
              <CardContent className="flex items-center justify-center h-full">
                <div className="text-center">
                  <Monitor className="w-16 h-16 mx-auto mb-4 text-muted-foreground" />
                  <h3 className="text-xl font-semibold mb-2">App Preview</h3>
                  <p className="text-muted-foreground mb-4">
                    Your generated app will appear here once created
                  </p>
                  <Button className="bg-gradient-primary hover:shadow-glow transition-smooth">
                    Generate Preview
                  </Button>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="code" className="mt-4 h-full">
            <Card className="h-full">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <FileCode className="w-5 h-5" />
                  Generated Code
                </CardTitle>
                <CardDescription>
                  AI-generated source code for your application
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="bg-muted rounded-lg p-4 font-mono text-sm">
                  <div className="text-muted-foreground">
                    {`// Generated by AI Assistant
import React from 'react';
import './App.css';

function App() {
  return (
    <div className="App">
      <header className="App-header">
        <h1>Welcome to your AI-generated app!</h1>
        <p>Start building amazing things.</p>
      </header>
    </div>
  );
}

export default App;`}
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="files" className="mt-4 h-full">
            <Card className="h-full">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Folder className="w-5 h-5" />
                  Project Files
                </CardTitle>
                <CardDescription>
                  Explore your generated project structure
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  {projectFiles.map((file, index) => (
                    <div
                      key={index}
                      className="flex items-center gap-3 p-3 rounded-lg hover:bg-muted/50 transition-smooth cursor-pointer"
                    >
                      <div className="p-2 bg-gradient-accent rounded">
                        {file.type === "react" && <FileCode className="w-4 h-4 text-accent-foreground" />}
                        {file.type === "css" && <FileCode className="w-4 h-4 text-accent-foreground" />}
                        {file.type === "image" && <Image className="w-4 h-4 text-accent-foreground" />}
                        {file.type === "json" && <Settings className="w-4 h-4 text-accent-foreground" />}
                      </div>
                      <div className="flex-1">
                        <p className="font-medium text-card-foreground">{file.name}</p>
                        <p className="text-sm text-muted-foreground">{file.size}</p>
                      </div>
                      <Badge variant="outline">{file.type}</Badge>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};